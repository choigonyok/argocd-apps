# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mysql-ha
# spec:
#   serviceName: mysql-ha
#   replicas: 3
#   selector:
#     matchLabels:
#       app: database
#   template:
#     metadata:
#       labels:
#         app: database
#     spec:
#       affinity:
#         podAntiAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#           - labelSelector:
#               matchExpressions:
#               - key: "app"
#                 operator: In
#                 values:
#                 - database
#             topologyKey: "kubernetes.io/hostname"
#       containers:
#         - name: database
#           image: achoistic98/blog_database:latest
#           ports:
#             - containerPort: 3306
#           volumeMounts:
#             - name: database-volume
#               mountPath: /var/lib/mysql
#           env:
#             - name: MYSQL_ROOT_PASSWORD
#               value: "password"
#             - name: MYSQL_DATABASE
#               value: "blogdb"
#       volumes:
#         - name: database-volume
#           hostPath:
#             path: /volumes # Replace with the actual path on your host machine
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-ha
spec:
  serviceName: mysql-ha
  replicas: 3
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      initContainers:
      - name: init-mysql
        image: achoistic98/blog_mysqls:latest
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          if [[ $ordinal -eq 0 ]]; then
            cp /etc/mysql/conf.d/mysql-master.cnf /mnt/mysql.cnf
            cp /docker-entrypoint-initdb.d/init-master.sql /mnt/init.sql
          else
            cp /etc/mysql/conf.d/mysql-slave.cnf /mnt/mysql.cnf
            cp /docker-entrypoint-initdb.d/init-slave.sql /mnt/init.sql
          fi
        volumeMounts:
        - name: master-slave-cfg
          mountPath: /mnt/mysql.cnf
        - name: master-slave-init
          mountPath: /mnt/init.sql
      containers:
        - name: database
          image: mysql:latest
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: database-volume
              mountPath: /var/lib/mysql
            - name: master-slave-cfg
              mountPath: /etc/mysql/conf.d/mysql.cnf
            - name: master-slave-init
              mountPath: /docker-entrypoint-initdb.d/init.sql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "blogdb"
      volumes:
        - name: database-volume
          hostPath:
            path: /volumes # Replace with the actual path on your host machine
        - name: master-slave-cfg
          hostPath:
            path: /cfg/mysql.cnf
        - name: master-slave-init
          hostPath:
            path: /cfg/init.sql